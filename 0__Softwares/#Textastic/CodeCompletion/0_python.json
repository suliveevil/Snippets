{
    "description": "Textastic CodeCompletion for Python",
    "uuid": "B62DFA6C-7292-11EA-A8CB-97DD6C7D84B1",
    "//":"一切皆数据，Python 内：一切皆对象",
    "completionSets": [
        {
            "//": "Shebang 和 Python 编码声明",
            "name": "python.file.header",
            "defaultAppend": "",
            "strings": [
                {
                    "string": "file",
                    "replace": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n$0"
                },
                {
                    "string": "python",
                    "replace": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n$0"
                },
                {
                    "string": "utf-8",
                    "replace": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n$0"
                }
            ]
        },
        {
            "//":"注释",
            "name": "python.comment",
            "defaultAppend": "",
            "strings": [{
                "string": "comment",
                "replace": "\"\"\"\n${1:Your Comment}\n\"\"\"\n$0"
            }]
        },
        {
            "//":"Python 分隔符 Delimiter",
            "name": "python.delimiter",
            "strings": [
                {"string": "(","replace": "($1)$0"},
                {"string": ")","replace": ")$0"},
                {"string": "[","replace": "[$1]$0"},
                {"string": "]","replace": "]$0"},
                {"string": "{","replace": "{$1}$0"},
                {"string": "}","replace": "}$0"},
                {"string": "（","replace": "($1)$0"},
                {"string": "）","replace": ")$0"},
                {"string": "【","replace": "[$1]$0"},
                {"string": "】","replace": "]$0"},
                {"string": "】","replace": "]$0"},
                ",",
                ":",
                ";",
                ".",
                {"string": "，","replace": ",$0"},
                {"string": "：","replace": ":$0"},
                {"string": "；","replace": ";$0"},
                {"string": "。","replace": ".$0"},
                "@",
                "=",
                "->",
                "+=",
                "-=",
                "*=",
                "/=",
                "//=",
                "%=",
                "@=",
                "&=",
                "|=",
                {"string": "｜=","replace": "|=$0"},
                "^=",
                ">>=",
                "<<=",
                "**="
            ]
        },
        {
            "//":"Python 运算符 Operator",
            "name": "python.operator",
            "defaultAppend": "",
            "strings": [
                "+",
                "-",
                "*",
                "**",
                "/",
                "//",
                "%",
                "@",
                "<",
                "<=",
                "<<",
                ">",
                "==",
                ">>",
                "&",
                "|",
                "^",
                "~",
                {"string": "～","replace": "~"},
                {"string": "：=","replace": ":="},
                {"string": "！=","replace": "!="}
            ]
        },
        {
            "//": "Python 关键字（False、None、True 既是关键字也是常量",
            "name": "python.keyword",
            "strings": [
                "and",
                "as",
                "assert",
                "async",
                "await",
                "break",
                {
                    "//":"代码块：类定义",
                    "string": "class",
                    "replace": "class ${1:ClassName}(${2:ParentObject}):\n\t$0"
                },
                "continue",
                {
                    "//":"代码块：函数体",
                    "string": "def",
                    "replace": "def ${1:function_name}(${2:parameter}):\n\t$0"
                },
                "del",
                "elif",
                "else",
                "except",
                "finally",
                "for",
                {
                    "string":"from",
                    "replace":"from $0"
                },
                "global",
                "if",
                {
                    "string":"import",
                    "replace":"import $0"
                },
                "in",
                "is",
                "lambda",
                "nonlocal",
                "not",
                "or",
                "pass",
                "raise",
                "return",
                "try",
                "while",
                "with",
                "yield"
            ]
        },
        {
            "name": "python.standardlibrary",
            "defaultAppend": "$0",
            "strings": [
                "__future__",
                "__main__",
                "_thread",
                "_dummy_thread",
                "abc",
                "aifc",
                "argparse",
                "array",
                "ast",
                "asynchat",
                "asyncio",
                "asyncore",
                "atexit",
                "audioop",
                "base64",
                "bdb",
                "binascii",
                "binhex",
                "bisect",
                "builtins",
                "bz2",
                "calendar",
                "cgi",
                "cgitb",
                "chunk",
                "cmath",
                "cmd",
                "code",
                "codecs",
                "codeop",
                "collections",
                "colorsys",
                "compileall",
                "concurrent",
                "configparser",
                "contextlib",
                "contextvars",
                "copy",
                "copyreg",
                "cProfile",
                "crypt",
                "csv",
                "curses",
                "dataclasses",
                "datetime",
                "dbm",
                "decimal",
                "difflib",
                "dis",
                "distutils",
                "doctest",
                "dummy_threading",
                "email",
                "encodings",
                "ensurepip",
                "enum",
                "errno",
                "faulthandler",
                "fcntl",
                "filecmp",
                "fileinput",
                "fnmatch",
                "formatter",
                "fractions",
                "ftplib",
                "functools",
                "gc",
                "getopt",
                "getpass",
                "gettext",
                "glob",
                "grp",
                "gzip",
                "hashlib",
                "heapq",
                "hmac",
                "html",
                "http",
                "imaplib",
                "imghdr",
                "importlib",
                "inspect",
                "io",
                "ipaddress",
                "itertools",
                "json",
                "keyword",
                "lib2to3",
                "linecache",
                "locale",
                "logging",
                "lzma",
                "mailbox",
                "mailcap",
                "marshal",
                "math",
                "mimetypes",
                "mmap",
                "modulefinder",
                "msilib",
                "msvcrt",
                "multiprocessing",
                "netrc",
                "nis",
                "nnplib",
                "numbers",
                "operator",
                "os",
                "ossaudiodev",
                "parser",
                "pathlib",
                "pdb",
                "pickle",
                "pickletools",
                "pipes",
                "pkgutil",
                "platform",
                "plistlib",
                "poplib",
                "posix",
                "pprint",
                "profile",
                "pstats",
                "pty",
                "pwd",
                "py_compile",
                "pyclbr",
                "pydoc",
                "queue",
                "quopri",
                "random",
                "re",
                "readline",
                "reprlib",
                "resource",
                "rlcompleter",
                "runpy",
                "sched",
                "secrets",
                "select",
                "selectors",
                "shelve",
                "shlex",
                "shutil",
                "signal",
                "site",
                "smtpd",
                "smtplib",
                "sndhdr",
                "socket",
                "socketserver",
                "spwd",
                "sqlite3",
                "ssl",
                "stat",
                "statistics",
                "string",
                "stringprep",
                "struct",
                "subprocess",
                "sunau",
                "symbol",
                "symtable",
                "sys",
                "sysconfig",
                "syslog",
                "tabnanny",
                "tarfile",
                "telnetlib",
                "tempfile",
                "termios",
                "test",
                "textwrap",
                "threading",
                "time",
                "timeit",
                "tkinter",
                "token",
                "tokenize",
                "trace",
                "traceback",
                "tracmalloc",
                "tty",
                "turtle",
                "turtledemo",
                "types",
                "typing",
                "unicodedata",
                "unittest",
                "urllib",
                "uu",
                "uuid",
                "venv",
                "warnings",
                "wave",
                "weakref",
                "webbrowser",
                "winreg",
                "winsound",
                "wsgiref",
                "xdrlib",
                "xml",
                "xmlrpc",
                "zipapp",
                "zipfile",
                "zipimport",
                "zlib"
            ]
        },
        {
            "name": "python.re",
            "defaultAppend": "",
            "strings": [
                "A",
                "ASCII",
                {
                    "string":"compile",
                    "replace":"compile(${1:pattern},${2:flags=0})$0"
                },
                {
                    "string":"match",
                    "replace":"match(${1:pattern},${2:StringObject})$0"
                },
                {
                    "string":"search",
                    "replace":"search(${1:r}'${2:RegularExpression}','${3:StringObject}')$0"
                }
            ]
        },
        {
            "name": "python.object",
            "defaultAppend": "",
            "strings": [
                {"string": "list","replace": "list"},
                {"string": "list","replace": "list"},
                {"string": "list","replace": "list"},
                {"string": "list","replace": "list"},
                {"string": "list","replace": "list"},
                {"string": "list","replace": "list"},
                {"string": "list","replace": "list"},
                {"string": "list","replace": "list"},
                {"string": "list","replace": "list"}
            ]
        },
        {
            "name": "python.object.attribute",
            "defaultAppend": "",
            "strings": [
                {"string": "list","replace": "list"},
                {"string": "list","replace": "list"},
                {"string": "list","replace": "list"},
                {"string": "list","replace": "list"},
                {"string": "list","replace": "list"},
                {"string": "list","replace": "list"},
                {"string": "list","replace": "list"},
                {"string": "list","replace": "list"},
                {"string": "list","replace": "list"}
            ]
        },
        {
            "name": "python.object.sequence",
            "defaultAppend": "",
            "strings": [
                {"string": "list","replace": "list"},
                {"string": "list","replace": "list"},
                {"string": "list","replace": "list"},
                {"string": "list","replace": "list"},
                {"string": "list","replace": "list"},
                {"string": "list","replace": "list"},
                {"string": "list","replace": "list"},
                {"string": "list","replace": "list"},
                {"string": "list","replace": "list"}
            ]
        },
        {
            "name": "python.object.sequence.list",
            "defaultAppend": "",
            "strings": [
                {"string": "list","replace": "list"},
                {"string": "list","replace": "list"},
                {"string": "list","replace": "list"},
                {"string": "list","replace": "list"},
                {"string": "list","replace": "list"},
                {"string": "list","replace": "list"},
                {"string": "list","replace": "list"},
                {"string": "list","replace": "list"},
                {"string": "list","replace": "list"}
            ]
        },
        {
            "name": "python.object.method",
            "defaultAppend": "",
            "strings": [
                {"string": "list","replace": "list"},
                {"string": "list","replace": "list"},
                {"string": "list","replace": "list"},
                {"string": "list","replace": "list"},
                {"string": "list","replace": "list"},
                {"string": "list","replace": "list"},
                {"string": "list","replace": "list"},
                {"string": "list","replace": "list"},
                {"string": "list","replace": "list"}
            ]
        },
        {
            "name": "python.object.property",
            "defaultAppend": "",
            "strings": [
                "__new__",
                "__init__",
                "__del__",
                "__repr__",
                "__str__",
                "__bytes__",
                "__format__",
                "__lt__",
                "__le__",
                "__eq__",
                "__ne__",
                "__gt__",
                "__ge__",
                "__hash__",
                "__bool__",
                "__getattr__",
                "__getattribute__",
                "__setattr__",
                "__delattr__",
                "__dir__",
                "__get__",
                "__set__",
                "__delete__",
                "__set_name__",
                "__slots__",
                "__init_subclass__",
                "__call__",
                "__len__",
                "__length_hint__",
                "__getitem__",
                "__setitem__",
                "__delitem__",
                "__missing__",
                "__iter__",
                "__reversed__",
                "__contains__",
                "__add__",
                "__sub__",
                "__mul__",
                "__matmul__",
                "__truediv__",
                "__floordiv__",
                "__mod__",
                "__divmod__",
                "__pow__",
                "__lshift__",
                "__rshift__",
                "__and__",
                "__xor__",
                "__or__",
                "__radd__",
                "__rsub__",
                "__rmul__",
                "__rmatmul__",
                "__rtruediv__",
                "__rfloordiv__",
                "__rmod__",
                "__rdivmod__",
                "__rpow__",
                "__rlshift__",
                "__rrshift__",
                "__rand__",
                "__rxor__",
                "__ror__"
            ]
        },
        {
            "name": "python.constant",
            "defaultAppend": "",
            "strings": [
                "False",
                "True",
                "None",
                "NotImplemented",
                "Ellipsis",
                "__debug__",
                "quit",
                "exit",
                "copyright",
                "credits",
                "license"
            ]
        },
        {
            "name": "python.function.builtin",
            "defaultAppend": "($1)$0",
            "strings": [
                "__import__",
                "abs",
                "all",
                "any",
                "ascii",
                "bin",
                "bool",
                "breakpoint",
                "bytearray",
                "bytes",
                "callable",
                "chr",
                "classmethod",
                "compile",
                {
                    "string":"complex",
                    "replace":"complex(${1:x}${2:,}${3:y})$0"
                },
                "delattr",
                "dict",
                "dir",
                "divmod",
                "enumerate",
                "eval",
                "exec",
                "filter",
                "float",
                "format",
                "frozenset",
                "getattr",
                "globals",
                "hasattr",
                "hash",
                "help",
                "hex",
                "id",
                "input",
                "int",
                "isinstance",
                "issubclass",
                "iter",
                "len",
                "list",
                "locals",
                "map",
                "max",
                "memoryview",
                "min",
                "next",
                "object",
                "oct",
                "open",
                "ord",
                "pow",
                "print",
                "property",
                "range",
                "repr",
                "reversed",
                "round",
                "set",
                "setattr",
                "slice",
                "sorted",
                "staticmethod",
                "str",
                "sum",
                "super",
                "tuple",
                "type",
                "vars",
                "zip"
            ]
        },
        {
            "name": "python.function.magic",
            "strings": [
                "__abs__",
                "__add__",
                "__and__",
                "__call__",
                "__cmp__",
                "__coerce__",
                "__complex__",
                "__contains__",
                "__del__",
                "__delattr__",
                "__delete__",
                "__delitem__",
                "__delslice__",
                "__div__",
                "__divmod__",
                "__enter__",
                "__eq__",
                "__exit__",
                "__float__",
                "__floordiv__",
                "__ge__",
                "__get__",
                "__getattr__",
                "__getattribute__",
                "__getitem__",
                "__getslice__",
                "__gt__",
                "__hash__",
                "__hex__",
                "__iadd__",
                "__iand__",
                "__idiv__",
                "__ifloordiv__",
                "__ilshift__",
                "__imod__",
                "__imul__",
                "__init__",
                "__int__",
                "__invert__",
                "__ior__",
                "__ipow__",
                "__irshift__",
                "__isub__",
                "__iter__",
                "__itruediv__",
                "__ixor__",
                "__le__",
                "__len__",
                "__long__",
                "__lshift__",
                "__lt__",
                "__mod__",
                "__mul__",
                "__ne__",
                "__neg__",
                "__new__",
                "__nonzero__",
                "__oct__",
                "__or__",
                "__pos__",
                "__pow__",
                "__radd__",
                "__rand__",
                "__rdiv__",
                "__rdivmod__",
                "__repr__",
                "__rfloordiv__",
                "__rlshift__",
                "__rmod__",
                "__rmul__",
                "__ror__",
                "__rpow__",
                "__rrshift__",
                "__rshift__",
                "__rsub__",
                "__rtruediv__",
                "__rxor__",
                "__set__",
                "__setattr__",
                "__setitem__",
                "__setslice__",
                "__str__",
                "__sub__",
                "__truediv__",
                "__unicode__",
                "__xor__"
            ]
        },
        {
            "name": "python.function.int",
            "defaultAppend": "($1)$0",
            "strings": [
                "bit_length",
                "to_bytes",
                "from_bytes",
                "as_integer_ratio"
            ]
        },
        {
            "name": "python.function.float",
            "defaultAppend": "($1)$0",
            "strings": [
                "as_integer_ratio",
                "is_ integer",
                "hex",
                "fromhex"
            ]
        },
        {
            "//": "Sequence: List、Tuple、Range",
            "name": "python.function.sequence",
            "defaultAppend": "($1)$0",
            "strings": [
                "append",
                "clear",
                "copy",
                "count",
                "extend",
                "index",
                "insert",
                "pop",
                "remove",
                "reverse",
                "sort"
            ]
        },
        {
            "name": "python.function.str",
            "defaultAppend": "($1)$0",
            "strings": [
                "capitalize",
                "casefold",
                "center",
                "count",
                "encode",
                "endswith",
                "expandtabs",
                "find",
                "format",
                "format_map",
                "index",
                "isalnum",
                "isalpha",
                "isascii",
                "isdecimal",
                "isdigit",
                "isidentifier",
                "islower",
                "isnumeric",
                "isprintable",
                "isspace",
                "istitle",
                "isupper",
                "join",
                "ljust",
                "lower",
                "lstrip",
                "maketrans",
                "partition",
                "replace",
                "rfind",
                "rindex",
                "rjust",
                "rpartition",
                "rsplit",
                "rstrip",
                "split",
                "splitlines",
                "startswith",
                "strip",
                "swapcase",
                "title",
                "translate",
                "upper",
                "zfill"
            ]
        },
        {
            "name": "python.function.byte",
            "defaultAppend": "($1)$0",
            "strings": [
                "count",
                "decode",
                "endswith",
                "find",
                "index",
                "join",
                "maketrans",
                "partition",
                "replace",
                "rfind",
                "rindex",
                "rpartition",
                "startswith",
                "translate",
                "center",
                "ljust",
                "lstrip",
                "rjust",
                "rsplit",
                "rstrip",
                "split",
                "strip",
                "capitalize",
                "expandtabs",
                "isalnum",
                "isalpha",
                "isascii",
                "isdigit",
                "islower",
                "isspace",
                "istitle",
                "isupper",
                "lower",
                "splitlines",
                "swapcase",
                "title",
                "upper",
                "zfill"
            ]
        },
        {
            "name": "python.function.set",
            "defaultAppend": "($1)$0",
            "strings": []
        },
        {
            "name": "python.function.dict",
            "defaultAppend": "($1)$0",
            "strings": []
        },
        {
            "name": "python.functions",
            "strings": [{
                    "string": "a/f/",
                    "replace": "${1:funcName}(${2:argument})$0"
                },
                {
                    "//": "测试用",
                    "string": "ifmain",
                    "replace": "if __name__ = '__main__':\n\t$1\n$0"
                }
            ]
        },
        {
            "name": "python.builtins.error",
            "strings": [
                "ArithmeticError",
                "AssertionError",
                "AttributeError",
                "BaseException",
                "BlockingIOError",
                "BrokenPipeError",
                "BufferError",
                "BytesWarning",
                "ChildProcessError",
                "ConnectionAbortedError",
                "ConnectionError",
                "ConnectionResetError",
                "DeprecationWarning",
                "EOFError",
                "Ellipsis",
                "EnvironmentError",
                "Exception",
                "False",
                "FileExistsError",
                "FileNotFoundError",
                "FloatingPointError",
                "FutureWarning",
                "GeneratorExit",
                "IOError",
                "ImportError",
                "ImportWarning",
                "IndentationError",
                "IndexError",
                "InterruptedError",
                "IsADirectoryError",
                "KeyError",
                "KeyboardInterrupt",
                "LookupError",
                "MemoryError",
                "NameError",
                "None",
                "NotADirectoryError",
                "NotImplemented",
                "NotImplementedError",
                "OSError",
                "OverflowError",
                "PendingDeprecationWarning",
                "PermissionError",
                "ProcessLookupError",
                "ReferenceError",
                "ResourceWarning",
                "RuntimeError",
                "RuntimeWarning",
                "StandardError",
                "StopIteration",
                "SyntaxError",
                "SyntaxWarning",
                "SystemError",
                "SystemExit",
                "SytaxWarning",
                "TabError",
                "TimeoutError",
                "True",
                "TypeError",
                "UnboundLocalError",
                "UnicodeDecodeError",
                "UnicodeEncodeError",
                "UnicodeError",
                "UnicodeTranslateError",
                "UnicodeWarning",
                "UserWarning",
                "VMSError",
                "ValueError",
                "Warning",
                "WindowsError",
                "ZeroDivisionError"
            ]
        },
        {
            "name": "python.leetcode&lintcode",
            "strings": [
                {
                    "string":"leetc",
                    "replace":"#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"LeetCode-\n\n\"\"\"\n## input\n\n## Solution\n\n## output",
                },
                {
                    "string":"lintc",
                    "replace":"#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"LintCode-\n\n\"\"\"\n## input\n\n## Solution\n\n## output",
                }
            ]
        },
        {
            "name": "python.decorator.timer",
            "strings": [
                {
                    "//":"timer_function",
                    "string":"timer",
                    "replace":"from functools import wraps\nimport time\n\n\ndef timer_func(function):\n\t@wraps(function)\n\tdef function_timer(*args, **kwargs):\n\t\tprint('[Function: {name} start...]'.format(name=function.__name__))\n\t\tt0 = time.time()\n\t\tresult = function(*args, **kwargs)\n\t\tt1 = time.time()\n\t\tprint('[Function: {name} finished,\\n Time Spend: {time:.9f}s]'.format(\n\t\t\tname=function.__name__, time=t1 - t0))\n\t\treturn result\n\n\treturn function_timer\n\n\n@timer_func\ndef ${1:yourFunction}():\n    \n\nif __name__ == '__main__':\n\t$COMPLETION(para)",
                },
                {
                    "string":"timer_context",
                    "replace":"#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"LintCode-\n\n\"\"\"\n## input\n\n## Solution\n\n## output",
                }
            ]
        }
    ],
    "contexts": [
        {
            "description": "Python 运行环境、编码声明、LeetCode、LintCode",
            "scope": "source.python",
            "pattern": "^([a-zA-Z0-9/_\\-]*)",
            "completionCaptureIndex": 1,
            "completionSetNames": [
                "python.file.header",
                "python.decorator.timer",
                "python.leetcode&lintcode"
            ]
        },
        {
            "description": "Python 分隔符",
            "scope": "source.python",
            "pattern": "([()\\[\\]{},:;.@=\\-+*&|^<>%/（）【】“”']+)",
            "completionCaptureIndex": 1,
            "completionSetNames": [
                "python.delimiter"
            ]
        },
        {
            "description": "Python 运算符",
            "scope": "source.python",
            "pattern": "([+\\-*/%@<>&｜|^～~:：=！!]+)",
            "completionCaptureIndex": 1,
            "completionSetNames": [
                "python.operator"
            ]
        },
        {
            "description": "Python 注释、函数",
            "scope": "source.python",
            "pattern": "\\b([a-zA-Z0-9/]+)",
            "completionCaptureIndex": 1,
            "completionSetNames": [
                "python.comment",
                "python.functions"
            ]
        },
        {
            "description": "Python Keywords 关键字",
            "scope": "source.python",
            "pattern": "(?<!\"|'|#)\\b([a-zA-Z]+)",
            "completionCaptureIndex": 1,
            "completionSetNames": [
                "python.keyword"
            ]
        },
        {
            "description": "Python Standard Library 标准库",
            "scope": "source.python",
            "pattern": "(?<=from|import)\\s([a-zA-Z0-9_]*)",
            "completionCaptureIndex": 1,
            "completionSetNames": [
                "python.standardlibrary"
            ]
        },
        {
            "description": "Python RE 正则表达式",
            "scope": "source.python",
            "pattern": "(?<=re\\.)([a-zA-Z0-9_]*)",
            "completionCaptureIndex": 1,
            "completionSetNames": [
                "python.re"
            ]
        },
        {
            "description": "Python Object Methods",
            "scope": "source.python",
            "pattern": "",
            "completionCaptureIndex": 1,
            "completionSetNames": [
                "python.object.method"
            ]
        },
        {
            "description": "Python Function Builtin 内建函数",
            "scope": "source.python",
            "//": "(?<!\\.|\"|'|#)\\b([a-zA-Z0-9_]+)",
            "pattern": "(?<!\"|'|#)\\b([a-zA-Z0-9_]+)",
            "completionCaptureIndex": 1,
            "completionSetNames": [
                "python.constant",
                "python.function.builtin"
            ]
        },
        {
            "description": "Python Function Magic",
            "scope": "source.python",
            "pattern": "(?<!\"|'|#)\\b([a-zA-Z0-9_]+)",
            "completionCaptureIndex": 1,
            "completionSetNames": [
                "python.function.magic"
            ]
        },
        {
            "description": "Python Function Int",
            "scope": "source.python",
            "pattern": "(?<=int\\.)([a-zA-Z0-9]*)",
            "completionCaptureIndex": 1,
            "completionSetNames": [
                "python.function.int"
            ]
        },
        {
            "description": "Python Function Float",
            "scope": "source.python",
            "pattern": "(?<=float\\.)([a-zA-Z0-9]*)",
            "completionCaptureIndex": 1,
            "completionSetNames": [
                "python.function.float"
            ]
        },
        {
            "description": "Python Function Set",
            "scope": "source.python",
            "pattern": "(?<=s\\.)([a-zA-Z0-9]*)",
            "completionCaptureIndex": 1,
            "completionSetNames": [
                "python.function.sequence"
            ]
        },
        {
            "description": "Python Function Str",
            "scope": "source.python",
            "pattern": "(?<=str\\.)([a-zA-Z0-9]*)",
            "completionCaptureIndex": 1,
            "completionSetNames": [
                "python.function.str"
            ]
        },
        {
            "description": "Python Function Byte",
            "scope": "source.python",
            "pattern": "(?<=bytes\\.|bytearray\\.)([a-zA-Z0-9]*)",
            "completionCaptureIndex": 1,
            "completionSetNames": [
                "python.function.byte"
            ]
        },
        {
            "description": "Python Function Set",
            "scope": "source.python",
            "pattern": "(?<=set\\.)([a-zA-Z0-9]*)",
            "completionCaptureIndex": 1,
            "completionSetNames": [
                "python.function.set"
            ]
        },
        {
            "description": "Python Function Dict",
            "scope": "source.python",
            "pattern": "(?<=dict\\.)([a-zA-Z0-9]*)",
            "completionCaptureIndex": 1,
            "completionSetNames": [
                "python.function.dict"
            ]
        },
        {
            "description": "Python Error",
            "scope": "source.python",
            "pattern": "((raise\\s)|(except\\s\\(?))([a-zA-Z0-9]*)",
            "completionCaptureIndex": 4,
            "completionSetNames": [
                "python.builtins.error"
            ]
        }
    ]
}